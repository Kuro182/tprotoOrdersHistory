<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:OrdersGrid">

    <Style x:Key="tabsControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource ChartBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="tabsItem_Control" TargetType="TabItem">
        <Setter Property="Height" Value="40px" />
        <Setter Property="Width" Value="140px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        x:Name="border"
                        BorderBrush="{DynamicResource BlackOpacity}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="5,5,0,0">
                        <TextBlock
                            x:Name="TabItemHeaderTextBlock"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextColorMain}"
                            Text="{TemplateBinding Header}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MainBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource linearGradient_Button_Hover}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ChartBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource linearGradient_Button_Hover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCancel" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource WhiteOpacity}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderTemplatedButton">
                        <Button
                            x:Name="TemplatedButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ChartBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderButtonStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Button Content="Cancel All" Style="{DynamicResource OrderManagerButtonStyle}" Height="28" Width="100"/>


                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{DynamicResource  ItemIsSelectedBackgroundGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DATA Grid Style  -->
    <Style x:Key="mainDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource ChartBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowBackground" Value="{DynamicResource ChartBackground}" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="RowHeight" Value="25" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource TextColorMain}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnDataGridContent}" />
        <Setter Property="RowStyle" Value="{DynamicResource RowDataGridStyle}" />
        <Setter Property="CellStyle" Value="{DynamicResource DataGridContentCellCentering}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="0"
					        CornerRadius="5"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset,
										                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										        Command="{x:Static DataGrid.SelectAllCommand}"
										        Focusable="false"
										        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
										                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
										        Visibility="{Binding HeadersVisibility,
										                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
										                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="1"
										                                Visibility="{Binding HeadersVisibility,
										                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
										                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                        Grid.Row="1"
										                        Grid.ColumnSpan="2"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
										           Grid.Row="1"
										           Grid.Column="2"
										           Maximum="{TemplateBinding ScrollableHeight}"
										           Orientation="Vertical"
										           Style="{DynamicResource MyScrollBar}"
										           ViewportSize="{TemplateBinding ViewportHeight}"
										           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										           Value="{Binding VerticalOffset,
										                           Mode=OneWay,
										                           RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
											           Grid.Column="1"
											           Maximum="{TemplateBinding ScrollableWidth}"
											           Orientation="Horizontal"
                                                        Style="{DynamicResource MyScrollBar}"
											           ViewportSize="{TemplateBinding ViewportWidth}"
											           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
											           Value="{Binding HorizontalOffset,
											                           Mode=OneWay,
											                           RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnDataGridContent" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            x:Name="columnHeaderBorder"
                            Background="{DynamicResource linearGradient_mainBg}"
                            BorderBrush="{DynamicResource BlackOpacity}"
                            BorderThickness="0,1,0,1" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RowDataGridStyle" TargetType="DataGridRow">
        <Setter Property="Height" Value="30px" />
        <Setter Property="Background" Value="{DynamicResource linearGradient_mainBg}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackOpacity}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,1" />
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#DCDCDC" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource  ItemIsSelectedBackgroundGradient}" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource  ItemIsSelectedBackgroundGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}" />
            </Trigger>
          
            
            
                     
        </Style.Triggers>
        
    </Style>
    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="{DynamicResource  ItemIsSelectedBackgroundGradient}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource  ItemIsSelectedBackgroundGradient}"/>
                <Setter Property="Foreground"  Value="{DynamicResource CommonForeground}"/>
                
            </MultiTrigger>
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="OrderManagerButtonStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />-->
        <Setter Property="Background" Value="{DynamicResource MainBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource CommonForeground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="10,2,0,2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource  ItemIsSelectedBackgroundGradient}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridContentCellCentering" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                        <ContentPresenter HorizontalAlignment="Center" />
                        <ContentPresenter SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Centering" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="Height" Value="40px" />
        <Setter Property="Width" Value="140px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border
                        x:Name="border"
                        BorderBrush="{DynamicResource BlackOpacity}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="5,5,0,0">
                        <TextBlock
                            x:Name="TabItemHeaderTextBlock"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextColorMain}"
                            Text="{TemplateBinding Header}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MainBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource linearGradient_Button_Hover}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ChartBackground}" />
                            <Setter TargetName="TabItemHeaderTextBlock" Property="Foreground" Value="{DynamicResource CommonYellowColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource linearGradient_Button_Hover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Height" Value="30px" />
        <Setter Property="Background" Value="{DynamicResource linearGradient_mainBg}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackOpacity}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,1" />



        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource ItemIsSelectedBackgroundGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource ItemIsSelectedBackgroundGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonSelectionBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--  DATA Grid Style  -->

</ResourceDictionary>